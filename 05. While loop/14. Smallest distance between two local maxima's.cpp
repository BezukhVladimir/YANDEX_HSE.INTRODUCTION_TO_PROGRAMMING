//Определите наименьшее расстояние между двумя локальными максимумами последовательности натуральных чисел, завершающейся числом 0. Если в последовательности нет двух локальных максимумов, выведите число 0.
//
//Начальное и конечное значение при этом локальными максимумами не считаются.
//
//Расстоянием считается количество пробелов между элементами. В качестве примера смотрите первый тест.
//
//Формат входных данных
//Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания).
//
//Формат выходных данных
//Выведите ответ на задачу.
//
//Sample Input 1:
//1
//2
//1
//1
//2
//1
//2
//1
//0
//
//Sample Output 1:
//2
//
//Sample Input 2:
//1
//2
//3
//0
//
//Sample Output 2:
//0

#include <iostream>

using namespace std;

int main()
{
    int A, B, C = 0, min = 0, t = 0, c = 0;
    cin >> A >> B >> C;

    while (C != 0) {
        if (A < B && B > C) {

            /* Если известный минимум расстояния между двумя локальными максимумами
             * больше нового найденного расстояния между двумя локальными максимумами
             * или минимальное расстояние между двумя локальными максимумами неизвестно,
             * а также ранее был пройден хотя бы один локальный максимум, то...
             */
            if (min > t || min == 0 && c > 0)
                min = t;

            ++c; // подсчитываем количество пройденных локальных максимумов.
            t = 0;
        }

        A = B;
        B = C;

        cin >> C;
        ++t;
    }

    cout << (c > 1
             ? min : 0);
}